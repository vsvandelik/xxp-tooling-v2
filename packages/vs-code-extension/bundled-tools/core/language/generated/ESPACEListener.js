export class ESPACEListener {
    enterProgram;
    exitProgram;
    enterExperimentDeclaration;
    exitExperimentDeclaration;
    enterExperimentHeader;
    exitExperimentHeader;
    enterExperimentBody;
    exitExperimentBody;
    enterExperimentContent;
    exitExperimentContent;
    enterSpaceDeclaration;
    exitSpaceDeclaration;
    enterSpaceHeader;
    exitSpaceHeader;
    enterSpaceBody;
    exitSpaceBody;
    enterSpaceContent;
    exitSpaceContent;
    enterStrategyStatement;
    exitStrategyStatement;
    enterParamDefinition;
    exitParamDefinition;
    enterParamValue;
    exitParamValue;
    enterEnumFunction;
    exitEnumFunction;
    enterRangeFunction;
    exitRangeFunction;
    enterTaskConfiguration;
    exitTaskConfiguration;
    enterTaskConfigurationHeader;
    exitTaskConfigurationHeader;
    enterTaskConfigurationBody;
    exitTaskConfigurationBody;
    enterConfigurationContent;
    exitConfigurationContent;
    enterParamAssignment;
    exitParamAssignment;
    enterControlBlock;
    exitControlBlock;
    enterControlBody;
    exitControlBody;
    enterControlContent;
    exitControlContent;
    enterSimpleTransition;
    exitSimpleTransition;
    enterConditionalTransition;
    exitConditionalTransition;
    enterConditionalTransitionHeader;
    exitConditionalTransitionHeader;
    enterConditionalTransitionBody;
    exitConditionalTransitionBody;
    enterCondition;
    exitCondition;
    enterControlChainElement;
    exitControlChainElement;
    enterDataDefinition;
    exitDataDefinition;
    enterWorkflowNameRead;
    exitWorkflowNameRead;
    enterTaskNameRead;
    exitTaskNameRead;
    enterSpaceNameRead;
    exitSpaceNameRead;
    enterExpression;
    exitExpression;
    visitTerminal(node) { }
    visitErrorNode(node) { }
    enterEveryRule(node) { }
    exitEveryRule(node) { }
}
//# sourceMappingURL=ESPACEListener.js.map