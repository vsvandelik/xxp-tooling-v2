import * as antlr from "antlr4ng";
export class XXPLexer extends antlr.Lexer {
    static SEMICOLON = 1;
    static ARROW = 2;
    static LBRACE = 3;
    static RBRACE = 4;
    static EQUALS = 5;
    static COMMA = 6;
    static WORKFLOW = 7;
    static FROM = 8;
    static DATA = 9;
    static DEFINE = 10;
    static IMPLEMENTATION = 11;
    static PARAM = 12;
    static TASK = 13;
    static CONFIGURE = 14;
    static INPUT = 15;
    static OUTPUT = 16;
    static START = 17;
    static END = 18;
    static BOOLEAN = 19;
    static IDENTIFIER = 20;
    static STRING = 21;
    static NUMBER = 22;
    static WS = 23;
    static COMMENT = 24;
    static channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    ];
    static literalNames = [
        null, "';'", "'->'", "'{'", "'}'", "'='", "','", "'workflow'", "'from'",
        "'data'", "'define'", "'implementation'", "'param'", "'task'", "'configure'",
        "'input'", "'output'", "'START'", "'END'"
    ];
    static symbolicNames = [
        null, "SEMICOLON", "ARROW", "LBRACE", "RBRACE", "EQUALS", "COMMA",
        "WORKFLOW", "FROM", "DATA", "DEFINE", "IMPLEMENTATION", "PARAM",
        "TASK", "CONFIGURE", "INPUT", "OUTPUT", "START", "END", "BOOLEAN",
        "IDENTIFIER", "STRING", "NUMBER", "WS", "COMMENT"
    ];
    static modeNames = [
        "DEFAULT_MODE",
    ];
    static ruleNames = [
        "SEMICOLON", "ARROW", "LBRACE", "RBRACE", "EQUALS", "COMMA", "WORKFLOW",
        "FROM", "DATA", "DEFINE", "IMPLEMENTATION", "PARAM", "TASK", "CONFIGURE",
        "INPUT", "OUTPUT", "START", "END", "LETTER", "DIGIT", "BOOLEAN",
        "IDENTIFIER", "STRING", "NUMBER", "WS", "COMMENT",
    ];
    constructor(input) {
        super(input);
        this.interpreter = new antlr.LexerATNSimulator(this, XXPLexer._ATN, XXPLexer.decisionsToDFA, new antlr.PredictionContextCache());
    }
    get grammarFileName() { return "XXP.g4"; }
    get literalNames() { return XXPLexer.literalNames; }
    get symbolicNames() { return XXPLexer.symbolicNames; }
    get ruleNames() { return XXPLexer.ruleNames; }
    get serializedATN() { return XXPLexer._serializedATN; }
    get channelNames() { return XXPLexer.channelNames; }
    get modeNames() { return XXPLexer.modeNames; }
    static _serializedATN = [
        4, 0, 24, 214, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5,
        2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2,
        13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7,
        19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 1,
        0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1,
        6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1,
        9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
        1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
        1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
        1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15,
        1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18,
        1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 3, 20,
        165, 8, 20, 1, 21, 1, 21, 1, 21, 5, 21, 170, 8, 21, 10, 21, 12, 21, 173, 9, 21, 1, 22,
        1, 22, 5, 22, 177, 8, 22, 10, 22, 12, 22, 180, 9, 22, 1, 22, 1, 22, 1, 23, 4, 23, 185,
        8, 23, 11, 23, 12, 23, 186, 1, 23, 1, 23, 4, 23, 191, 8, 23, 11, 23, 12, 23, 192, 3, 23,
        195, 8, 23, 1, 24, 4, 24, 198, 8, 24, 11, 24, 12, 24, 199, 1, 24, 1, 24, 1, 25, 1, 25,
        1, 25, 1, 25, 5, 25, 208, 8, 25, 10, 25, 12, 25, 211, 9, 25, 1, 25, 1, 25, 0, 0, 26, 1,
        1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27,
        14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 0, 39, 0, 41, 19, 43, 20, 45, 21, 47, 22, 49,
        23, 51, 24, 1, 0, 5, 3, 0, 65, 90, 95, 95, 97, 122, 1, 0, 48, 57, 1, 0, 34, 34, 3, 0, 9,
        10, 13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 220, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1,
        0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0,
        0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0,
        0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0,
        0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0,
        0, 0, 0, 51, 1, 0, 0, 0, 1, 53, 1, 0, 0, 0, 3, 55, 1, 0, 0, 0, 5, 58, 1, 0, 0, 0, 7, 60, 1, 0,
        0, 0, 9, 62, 1, 0, 0, 0, 11, 64, 1, 0, 0, 0, 13, 66, 1, 0, 0, 0, 15, 75, 1, 0, 0, 0, 17, 80,
        1, 0, 0, 0, 19, 85, 1, 0, 0, 0, 21, 92, 1, 0, 0, 0, 23, 107, 1, 0, 0, 0, 25, 113, 1, 0, 0,
        0, 27, 118, 1, 0, 0, 0, 29, 128, 1, 0, 0, 0, 31, 134, 1, 0, 0, 0, 33, 141, 1, 0, 0, 0, 35,
        147, 1, 0, 0, 0, 37, 151, 1, 0, 0, 0, 39, 153, 1, 0, 0, 0, 41, 164, 1, 0, 0, 0, 43, 166,
        1, 0, 0, 0, 45, 174, 1, 0, 0, 0, 47, 184, 1, 0, 0, 0, 49, 197, 1, 0, 0, 0, 51, 203, 1, 0,
        0, 0, 53, 54, 5, 59, 0, 0, 54, 2, 1, 0, 0, 0, 55, 56, 5, 45, 0, 0, 56, 57, 5, 62, 0, 0, 57,
        4, 1, 0, 0, 0, 58, 59, 5, 123, 0, 0, 59, 6, 1, 0, 0, 0, 60, 61, 5, 125, 0, 0, 61, 8, 1, 0,
        0, 0, 62, 63, 5, 61, 0, 0, 63, 10, 1, 0, 0, 0, 64, 65, 5, 44, 0, 0, 65, 12, 1, 0, 0, 0, 66,
        67, 5, 119, 0, 0, 67, 68, 5, 111, 0, 0, 68, 69, 5, 114, 0, 0, 69, 70, 5, 107, 0, 0, 70,
        71, 5, 102, 0, 0, 71, 72, 5, 108, 0, 0, 72, 73, 5, 111, 0, 0, 73, 74, 5, 119, 0, 0, 74,
        14, 1, 0, 0, 0, 75, 76, 5, 102, 0, 0, 76, 77, 5, 114, 0, 0, 77, 78, 5, 111, 0, 0, 78, 79,
        5, 109, 0, 0, 79, 16, 1, 0, 0, 0, 80, 81, 5, 100, 0, 0, 81, 82, 5, 97, 0, 0, 82, 83, 5, 116,
        0, 0, 83, 84, 5, 97, 0, 0, 84, 18, 1, 0, 0, 0, 85, 86, 5, 100, 0, 0, 86, 87, 5, 101, 0, 0,
        87, 88, 5, 102, 0, 0, 88, 89, 5, 105, 0, 0, 89, 90, 5, 110, 0, 0, 90, 91, 5, 101, 0, 0,
        91, 20, 1, 0, 0, 0, 92, 93, 5, 105, 0, 0, 93, 94, 5, 109, 0, 0, 94, 95, 5, 112, 0, 0, 95,
        96, 5, 108, 0, 0, 96, 97, 5, 101, 0, 0, 97, 98, 5, 109, 0, 0, 98, 99, 5, 101, 0, 0, 99,
        100, 5, 110, 0, 0, 100, 101, 5, 116, 0, 0, 101, 102, 5, 97, 0, 0, 102, 103, 5, 116, 0,
        0, 103, 104, 5, 105, 0, 0, 104, 105, 5, 111, 0, 0, 105, 106, 5, 110, 0, 0, 106, 22, 1,
        0, 0, 0, 107, 108, 5, 112, 0, 0, 108, 109, 5, 97, 0, 0, 109, 110, 5, 114, 0, 0, 110, 111,
        5, 97, 0, 0, 111, 112, 5, 109, 0, 0, 112, 24, 1, 0, 0, 0, 113, 114, 5, 116, 0, 0, 114,
        115, 5, 97, 0, 0, 115, 116, 5, 115, 0, 0, 116, 117, 5, 107, 0, 0, 117, 26, 1, 0, 0, 0,
        118, 119, 5, 99, 0, 0, 119, 120, 5, 111, 0, 0, 120, 121, 5, 110, 0, 0, 121, 122, 5, 102,
        0, 0, 122, 123, 5, 105, 0, 0, 123, 124, 5, 103, 0, 0, 124, 125, 5, 117, 0, 0, 125, 126,
        5, 114, 0, 0, 126, 127, 5, 101, 0, 0, 127, 28, 1, 0, 0, 0, 128, 129, 5, 105, 0, 0, 129,
        130, 5, 110, 0, 0, 130, 131, 5, 112, 0, 0, 131, 132, 5, 117, 0, 0, 132, 133, 5, 116,
        0, 0, 133, 30, 1, 0, 0, 0, 134, 135, 5, 111, 0, 0, 135, 136, 5, 117, 0, 0, 136, 137, 5,
        116, 0, 0, 137, 138, 5, 112, 0, 0, 138, 139, 5, 117, 0, 0, 139, 140, 5, 116, 0, 0, 140,
        32, 1, 0, 0, 0, 141, 142, 5, 83, 0, 0, 142, 143, 5, 84, 0, 0, 143, 144, 5, 65, 0, 0, 144,
        145, 5, 82, 0, 0, 145, 146, 5, 84, 0, 0, 146, 34, 1, 0, 0, 0, 147, 148, 5, 69, 0, 0, 148,
        149, 5, 78, 0, 0, 149, 150, 5, 68, 0, 0, 150, 36, 1, 0, 0, 0, 151, 152, 7, 0, 0, 0, 152,
        38, 1, 0, 0, 0, 153, 154, 7, 1, 0, 0, 154, 40, 1, 0, 0, 0, 155, 156, 5, 116, 0, 0, 156,
        157, 5, 114, 0, 0, 157, 158, 5, 117, 0, 0, 158, 165, 5, 101, 0, 0, 159, 160, 5, 102,
        0, 0, 160, 161, 5, 97, 0, 0, 161, 162, 5, 108, 0, 0, 162, 163, 5, 115, 0, 0, 163, 165,
        5, 101, 0, 0, 164, 155, 1, 0, 0, 0, 164, 159, 1, 0, 0, 0, 165, 42, 1, 0, 0, 0, 166, 171,
        3, 37, 18, 0, 167, 170, 3, 37, 18, 0, 168, 170, 3, 39, 19, 0, 169, 167, 1, 0, 0, 0, 169,
        168, 1, 0, 0, 0, 170, 173, 1, 0, 0, 0, 171, 169, 1, 0, 0, 0, 171, 172, 1, 0, 0, 0, 172,
        44, 1, 0, 0, 0, 173, 171, 1, 0, 0, 0, 174, 178, 5, 34, 0, 0, 175, 177, 8, 2, 0, 0, 176,
        175, 1, 0, 0, 0, 177, 180, 1, 0, 0, 0, 178, 176, 1, 0, 0, 0, 178, 179, 1, 0, 0, 0, 179,
        181, 1, 0, 0, 0, 180, 178, 1, 0, 0, 0, 181, 182, 5, 34, 0, 0, 182, 46, 1, 0, 0, 0, 183,
        185, 3, 39, 19, 0, 184, 183, 1, 0, 0, 0, 185, 186, 1, 0, 0, 0, 186, 184, 1, 0, 0, 0, 186,
        187, 1, 0, 0, 0, 187, 194, 1, 0, 0, 0, 188, 190, 5, 46, 0, 0, 189, 191, 3, 39, 19, 0, 190,
        189, 1, 0, 0, 0, 191, 192, 1, 0, 0, 0, 192, 190, 1, 0, 0, 0, 192, 193, 1, 0, 0, 0, 193,
        195, 1, 0, 0, 0, 194, 188, 1, 0, 0, 0, 194, 195, 1, 0, 0, 0, 195, 48, 1, 0, 0, 0, 196, 198,
        7, 3, 0, 0, 197, 196, 1, 0, 0, 0, 198, 199, 1, 0, 0, 0, 199, 197, 1, 0, 0, 0, 199, 200,
        1, 0, 0, 0, 200, 201, 1, 0, 0, 0, 201, 202, 6, 24, 0, 0, 202, 50, 1, 0, 0, 0, 203, 204,
        5, 47, 0, 0, 204, 205, 5, 47, 0, 0, 205, 209, 1, 0, 0, 0, 206, 208, 8, 4, 0, 0, 207, 206,
        1, 0, 0, 0, 208, 211, 1, 0, 0, 0, 209, 207, 1, 0, 0, 0, 209, 210, 1, 0, 0, 0, 210, 212,
        1, 0, 0, 0, 211, 209, 1, 0, 0, 0, 212, 213, 6, 25, 0, 0, 213, 52, 1, 0, 0, 0, 10, 0, 164,
        169, 171, 178, 186, 192, 194, 199, 209, 1, 0, 1, 0
    ];
    static __ATN;
    static get _ATN() {
        if (!XXPLexer.__ATN) {
            XXPLexer.__ATN = new antlr.ATNDeserializer().deserialize(XXPLexer._serializedATN);
        }
        return XXPLexer.__ATN;
    }
    static vocabulary = new antlr.Vocabulary(XXPLexer.literalNames, XXPLexer.symbolicNames, []);
    get vocabulary() {
        return XXPLexer.vocabulary;
    }
    static decisionsToDFA = XXPLexer._ATN.decisionToState.map((ds, index) => new antlr.DFA(ds, index));
}
//# sourceMappingURL=XXPLexer.js.map